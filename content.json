{"pages":[{"title":"404","text":"","path":"404/index.html","date":"05-27","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"05-27","excerpt":""},{"title":"about me","text":"带来了我自己，不只是为着确认，偶尔有风，似乎比传说中的永恒，更宜于慰藉平生 关于我典型的双子，三分钟热度，敢想敢做，但又时常路遇瓶颈 永远的长不大，喜欢的女孩永远追不到，家里永远催着谈对象却又总缺对象 不是长得不好看，而是这几年青春全特么给游戏和动漫了，圈子小了，养成了死肥宅气息 为人面善，目前从事Java后台数据安全和大数据挖掘方向研究 爱好动漫：全职猎人、海贼王、进击的巨人、Fate…. 音乐：麻油叶、陈粒、万能青年旅店、 游戏：地下城与勇士、 文学：郭敬明《愿风裁尘》、川端康成《雪国》、《古都》、网络文学《神墓》 联系方式如果你的爱好也有这些，或者说你想和我交流技术，那就交个朋友吧！ QQ:979480161","path":"about me/index.html","date":"05-27","excerpt":""}],"posts":[{"title":"Spring","text":"##Spring [TOC] ###注解 ###@Scheduled实现定时任务 applicationContext.xml中配置：12345&lt;!--配置任务线程池--&gt;&lt;task:executor pool-size=\"10\" queue-capacity=\"10000\" rejection-policy=\"CALLER_RUNS\"/&gt;&lt;task:scheduler id=\"scheduler\" pool-size=\"10\"/&gt;&lt;!--配置annotation启动方式--&gt;&lt;task:annotation-driven executor=\"executor\" scheduler=\"scheduler\"/&gt; 2.实现方法前添加注解@Scheduled(cron=”0 10 * ?”) @Scheduled应该写在实现上； 注入方法不能有返回值； 实现类上要有@Component注解； cron参数 ###JPAJava对象持久化规范 Hibernate作为Jboss服务器中JPA的默认实现； Oracle的Weblogic使用EclipseLink(以前叫TopLink)作为默认的JPA实现； IBM的Websphere和Sun的Glassfish默认使用OpenJPA(Apache的一个开源项目)作为其默认的JPA实现 是java实体bean到关系型数据库的规范 配置文件 12345678910111213&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;persistence version=\"1.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"&gt; &lt;persistence-unit name=\"持久化单元名\" transaction-type=\"JTA\"&gt; &lt;jta-data-source&gt;使用JCA部署在javaEE服务器上的数据源JNDI&lt;/jta-data-source&gt; &lt;！--指定JPA实现提供者，不指定就采用JavaEE服务器默认的JPA提供者，这里以OpenJPA为例--&gt;&lt;provider&gt;org.apache.openjpa.persistence.PersistenceProviderImpl&lt;/provider&gt;&lt;class&gt;实体bean全路径名&lt;/class&gt;…… &lt;properties&gt; &lt;!--配置JPA实现提供者的一些信息--&gt; &lt;/properties&gt; &lt;/persistence-unit&gt;&lt;/persistence&gt; 可以在持久化策略文件中配置多个持久化单元persistence-unit，在使用分布式数据库时经常配置多个持久化单元 ###实体Bean的开发 实体Bean上添加@Entity注解，表示其为实体Bean 实体Bean必须序列化 @Table(name=&quot;数据库表名&quot;注解，标识映射到数据库的的表名 必须有一个@ID标识的主键，123@ID@Column(name=\"列名\")@GeneratedValue(Strategy=GenerationType.Auto) 支持字段注解(变量)、属性注解(set/get方法)；但在实体类中，不能混用；| @Entity | @Table | @ID | @GeneratedValue | @Column || ——- | ———– | —- | —————————- | ———– || 空 | name=”表名” | 空 | strategy=GenerationType.AUTO | name=”列名” | ###@Temporal标注时间类型 DATE TIME TIMESTAMP###@Transientbean中某一属性不想被映射至数据库###@Lob将属性持久化为Blob或者Clob类型，为大数据类型###@Basic是否延迟加载 延迟加载：@Basic(fetch=FetchType.Lazy) 非延迟加载：@Basic(fetch=FetchType.EAGER)","path":"Spring/","date":"05-27","excerpt":""},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"hello-world/","date":"05-27","excerpt":""}]}